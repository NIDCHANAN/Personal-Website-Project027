@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap");

*{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
/*กำหนด element ที่อยู่ภายใต้ Tag Body จะมีพื้นหลังสีดำเทา ตัวหนังสือสีขาว ฟอร์นตัวหนังสือคือ Poppins*/
body {
  background-color: #353836;
  color: white;
  font-family: "Poppins", sans-serif;
}
/*กำหนด element ที่อยู่ภายใต้ ID background จะมีพื้นหลังเป็นรูปที่อยู่ใน /image/image.Bg.jpg โดยรูปจะอยู่ตรงกลาง จัดแบบfixed และรูปจะถูกใช้ครั้งเดียว*/
#background{
    background: url('../image/image.Bg.jpg') center center fixed;
    background-repeat: repeat ;
    background-size: cover;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    
}
/*กำหนด element ที่อยู่ภายใต้ Tag a ใน header จะไม่มีลูกเล่นต่างๆ เช่น การขีดเส้นใต้*/
header a {
  text-decoration: none;
}

/*กำหนด element ที่อยู่ภายใต้ Tag header มีช่องว่างระหว่าง element จาก “ข้างใน” ทางซ้ายและทางขวาห่าง 20 px พื้นหลังสีเทาดำ สูง 80 px การแสดงผลแบบ flex */
header {
  padding: 0 20px;
  background-color: #1d1c1c;
  height: 80px;
  display: flex;
  justify-content: space-between;
}
/*กำหนด element ที่อยู่ภายใต้ ID brand มีขนาด 20px เป็นตัวหนังสือแบบหนา แสดงผลแบบflex จัดอยู่ตรงกลาง*/
#brand {
  font-weight: bold;
  font-size: 30px;
  display: flex;
  align-items: center;
}
/*กำหนด element ที่อยู่ภายใต้ Tag a ที่อยู่ใน ID brand ตัวหนังสือสีขาว*/
#brand a {
  color: #ffffff;
}
/*กำหนด element ที่อยู่ภายใต้ Tag ul จะมีการแสดงผลแบบ flex สูง 100% จัดอยู่ตรงกลาง */
ul {
  list-style: none;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
/*กำหนด element ที่อยู่ภายใต้ Tag a  ที่อยู่ใน ul จะมีตัวหนังสือสีขาว ขนาด 25px*/
ul a {
  color: rgb(253, 175, 41);
  font-size: 25px;
}
/*กำหนด element ที่อยู่ภายใต้ Tag li ที่อยู่ใน ul จะมีช่องว่างระหว่าง element ด้านใน 4 px และช่องว่างระหว่าง element ด้านนอกทางขวา 10px  */
ul li {
  padding: 5px;
  margin-left: 10px;
}
/*กำหนด element ที่อยู่ภายใต้ Tag li  ที่อยู่ใน ul เมื่อมีการเอาเม้าส์ไปชี้ จะนู้นขึ้นมา เป็นเวลา 5วินาที*/
ul li:hover {
  transform: scale(1.1);
  transition: 5s;
}
/*กำหนด element ที่อยู่ภายใต้ Id hamburger-icon จะมีช่องว่างระหว่าง element ด้านนอก โดยจะให้ระบบปรับแบบอัตโนมัติ มีเคอร์เซอร์ เป็น pointer*/
#hamburger-icon {
  margin: auto 0;
  display: none;
  cursor: pointer;
}
/*กำหนด element ที่อยู่ภายใต้ Div ใน Id hamburger-icon จะมีความกว้าง 35px ความสูง 3px มีพื้นหลังสีส้มเหลือง ช่องว่างระหว่าง element ด้านนอก 6px จะเน้นเป็นเวลา 0.4 วินาที*/
#hamburger-icon div {
  width: 35px;
  height: 3px;
  background-color: rgb(253, 175, 41);
  margin: 6px 0;
  transition: 0.4s;
}
/*การกำหนดลักษณะเมื่อกด open bar1 - 2 -3 จะเปลี่ยนเป็นกากบาท*/
.open .bar1 {
  -webkit-transform: rotate(-45deg) translate(-6px, 6px);
  transform: rotate(-45deg) translate(-6px, 6px);
}

.open .bar2 {
  opacity: 0;
}

.open .bar3 {
  -webkit-transform: rotate(45deg) translate(-6px, -8px);
  transform: rotate(45deg) translate(-6px, -8px);
}
/*กำหนด element ที่อยู่ภายใต้ class mobile-menu  เมื่อ open จะมีการแสดงผลแบบ flex เรียงแบบ column จัดอยู่ตรงกลาง */
.open .mobile-menu {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;

}
/*กำหนด element ที่อยู่ภายใต้ class mobile-menu จะมีการแสดงผลแบบปกติ ำื้นหลังสีดำ กว้าง 100% ชิดด้านบน 80px */
.mobile-menu {
  display: none;
  position: absolute;
  top: 80px;
  left: 0;
  height: calc(100vh - 50px);
  width: 100%;
  background-color: #1d1c1c;
}
/*กำหนด element ที่อยู่ภายใต้ class mobile-menu ใน tag a จะมีตัวหนังสือสีเหลืองอ่อน */
.mobile-menu a {
  color: rgb(243, 215, 166);
}
/*กำหนด element ที่อยู่ภายใต้ class mobile-menu ใน tag li ระยะห่างของ buttom 10px*/
.mobile-menu li {
  margin-bottom: 10px;
}
/*กำหนด element ที่อยู่ภายใต้ class mobile-menu ใน tag li เมื่อมีการเอาเม้าส์ไปชี้ จะมีตัวหนังสือสีเหลืองทอง ขอบเงาสีขาว*/
.mobile-menu li :hover {
  color: rgb(253, 175, 41);
  text-shadow: rgb(255, 255, 255) 1px 1px;
}
/*  เป็นการกำหนด element ขนาดของรูปภาพ ที่อยู่ภายใต้ แท็ก img ให้มีขนาด ความสูง 100 % ความกว้าง 100 % และกำหนด object ให้อยู่ในรูปแบบ cover  */
img {
	height: 100%;
	width: 100%;
	object-fit: cover;
}

/* กำหนดให้ element ที่มี class เป็น container มีการแสดงผลแบบ flex โความสูงของ viewport เป็น 100 และจัดโครงสร้างภายในให้อยู่กึ่งกลาง */
.container {
	min-height: 100vh;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
}

/* กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero เมื่อภายหลังการแสดงผล ให้มีความสูงและความกว้างเป็น 100% และสีพื้นหลังเป็นสีดำ */
#hero::after {
	content: '';
	position: absolute;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	background-color: black;
	opacity: .7;
	z-index: -1;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero และ element ที่ใช้ class ที่ชื่อว่า hero ให้มีความกว้างสูงสุด 1200px และมีลักษณะการแสดงผล เป็นlex-start*/
#hero .hero {
	max-width: 1000px;
	margin: 0 auto;
	padding: 0 90px;
	justify-content: flex-start;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero และแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้ มีลักษณะการแสดงผลเป็น block และความกว้างเป็น fit-content และมีตัวอักษรขนาด 4rem */
#hero h1 {
	display: block;
	width: fit-content;
	font-size: 4rem;
	position: relative;
	color: transparent;
	animation: text_reveal .5s ease forwards;
	animation-delay: 1s;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero ละแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้เลือก id ชื่อของ  item อันดับแรกให้แสดง animation-delay เป็นเวลา 1 s*/
#hero h1:nth-child(1) {
	animation-delay: 1s;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero ละแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้เลือก id ชื่อของ  item อันดับ2ให้แสดง animation-delay เป็นเวลา 1 s*/
#hero h1:nth-child(2) {
	animation-delay: 2s;
}
/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero ละแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้เลือก id ชื่อของ  item อันดับ3 ให้แสดง animation-delay เป็นเวลา 1 s*/
#hero h1:nth-child(3) {
	animation: text_reveal_name .5s ease forwards;
	animation-delay: 3s;
}
/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero ละแท็ค h1 span  ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้ ความกว้างทางซ้าย 0 และความสูง 100 % และสีของพื้นหลัง เป็นสี greenyellow*/
#hero h1 span {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 0;
	background-color: rgb(105, 105, 105);
	animation: text_reveal_box 1s ease;
	animation-delay: .5s;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero span ละแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้เลือก id ชื่อของ  item อันดับ1 ให้แสดง animation-delay เป็นเวลา 0.5s*/
#hero h1:nth-child(1) span {
	animation-delay: .5s;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero span ละแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้เลือก id ชื่อของ  item อันดับ2 ให้แสดง animation-delay เป็นเวลา 1.54 s*/
#hero h1:nth-child(2) span {
	animation-delay: 1.5s;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า hero span ละแท็ค h1 ที่อยุ่ภายใต้ id ที่ชื่อว่า hero ให้เลือก id ชื่อของ  item อันดับ3 ให้แสดง animation-delay เป็นเวลา 2.5s*/
#hero h1:nth-child(3) span {
	animation-delay: 2.5s;
}

/* เป็นการกำหนดการเคลื่อนไหวในส่วนของhamburger_puls เมื่อถึง 0 % ให้ opacity: 1; transform: scale(1); และเมื่อถึง 100% ให้ opacity: 0; transform: scale(1.4);*/
@keyframes hamburger_puls {
	0% {
		opacity: 1;
		transform: scale(1);
	}
	100% {
		opacity: 0;
		transform: scale(1.4);
	}
}

/*เป็นการกำหนดการเคลื่อนไหวในส่วนของ text_reveal_box เมื่อถึง 	50%  ให้มีความกว้างเป็น  100% และทางซ้ายกว้าง 0 และเมื่อ 100 %  ให้มีความกว้างเป็น  0% และทางซ้ายกว้าง 100% */
@keyframes text_reveal_box {
	50% {
		width: 100%;
		left: 0;
	}
	100% {
		width: 0;
		left: 100%;
	}
}

/*เป็นการกำหนดการเคลื่อนไหวในส่วนของ text_reveal เมื่อถึง 100 % ให้มีสีขาว  */
@keyframes text_reveal {
	100% {
		color: white;
	}
}

/*เป็นการกำหนดการเคลื่อนไหวในส่วนของ text_reveal_name มื่อถึง 100 % ให้ ตัวอักษรกว้าง 500 px*/
@keyframes text_reveal_name {
	100% {
		color: rgb(253, 175, 41);
		font-weight: 500;
	}
}
/* กำหนดให้ element ที่มี class เป็น section-title ให้ มีขนาดตัวอักษร 4 rem ความสูงของ ตัวอักษร 300 px และมีสีดำ และมีความกว้าง 10 px และอยู่บริเวณตรงกลาง */
.section-title {
	font-size: 4rem;
	font-weight: 300px;
	color: black;
	margin-bottom: 10px;
	text-transform: uppercase;
	letter-spacing: .2rem;
	text-align: center;
}

/* กำหนดให้ element ที่ใช้ class เป็น  section-title และอยู่ภายใต้แท็ก span ใหมีสี  crimson*/
.section-title span {
	color: crimson;
}


/* กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า educations โดยให้ พื้นหลังมีขนาด cover และแสดงในรูปของ column และมีความกว้างระหว่างขอบเป็น 100 px*/
#educations .educations {
	background-size: cover;
	flex-direction: column;
	text-align: center;
	max-width: 1500px;
	margin: 0 auto;
	padding: 100px 0;
	margin-top: 10px;
}
     
/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-top โดยกำหนดให้มีความกว้างสูงสุด 500 px และความกว้างระหว่าง element เป็น auto */
#educations .education-top {
	max-width: 500px;
	margin: 0 auto;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-bottom โดยให้แสดงอยุ่ในลักษณะของ flex และให้ item อยู่ตรงกลาง ความกว้างระหว่างขอบ ด้านบนขนาด 50 px */
#educations .education-bottom {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-wrap: wrap;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-item โดยให้แสดงอยู่ในลักษณะ ของflex และ แสดงอยู่ในลักษณะของ column และรูกำหนดให้รูปพื้นหลังอยู่ตามตำแหน่งที่ระบุ */
#educations .education-item {
	flex-basis: 100%;
	display: flex;
	align-items: flex-start;
	justify-content: center;
	flex-direction: column;
	padding: 30px;
	border-radius: 30px;
	background-image: url(../image/ปี2.jpg);
	background-size: cover;
	margin: 10px 5%;
	position: relative;
	z-index: 1;
	overflow: hidden;

}


/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-item เมื่อแสดงในภายหลัง กำหนดให้ความสูงและความกว้างเป็น 100% และสีพื้นหลังเป็นสีดำอ่อน*/
#educations .education-item::after {
	content: '';
	position: absolute;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	background-image: linear-gradient(60deg, #37393b 0%, #485563 100%);
	opacity: .9;
	z-index: -1;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-bottom และ คลาส ที่ชื่อว่า icon กำหนดให้มีความสูงและความกว้างเป็น 80 px และความกว้างระหว่างbottom เป็น 20 px*/
#educations .education-bottom .icon {
	height: 100px;
	width: 100px;
	margin-bottom: 20px;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-item และแท็ค h2 โดยให้ขนาดของตัวอักษรขนาด 2 rem และมีสีเป็นสีไข่อ่อนและความกว้างระหว่างbottom เป็น 10 px */
#educations .education-item h2 {
	font-size: 2rem;
	color: rgb(148, 139, 139);
	margin-bottom: 10px;
	text-transform: uppercase;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า educations และคลาส ที่ชื่อว่า education-item และแท็ค p  ดดยกำหนดให้มีสี เป็นสีขาว และกำหนดให้ตัวอักษร อยู่ทางซ้าย */
#educations .education-item p {
	color: white;
	text-align: left;
}
/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer โดยกำหนดให้้สีของรูปภาพมีสีดำอ่อน */
#footer {
	background-image: linear-gradient(60deg, #1d1c1c 0%, #1d1c1c 100%);
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer และelement ที่ใช้ คลาสที่ชื่อว่า footer โดยให้มีความสูงไม่เกิน 200 px และความกว้างระหว่าง element ด้านบน 50 px */
#footer .footer {
	min-height: 200px;
	flex-direction: column;
	padding-top: 50px;
	padding-bottom: 10px;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer และแท็ค h2 ที่อยู่ภายใต้คลาส ให้มีสีดำอ่อน และความกว้างของตัวอักษร 500 px และขนาดของตัวอักษร 1.8 rem */
#footer h2 {
	color: rgb(255, 255, 255);
	font-weight: 800;
	font-size: 1.5rem;
	letter-spacing: .1rem;
	margin-top: 10px;
	margin-bottom: 10px;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer และ element ที่ใช้คลาสที่ชื่อว่า social-icon โดยกำหนด ให้การแสดงผลเป็นลักษณะ flex และระยะห่างหว่าง bottom ให้มีขนาด 30 px  */
#footer .social-icon {
	display: flex;
	margin-bottom: 30px;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer และ element ที่ใช้คลาสที่ชื่อว่า social-item กำหนดให้ ความสูงและความกว้างเป็น 50 px และความกว้างระหว่าง element 5 px */
#footer .social-item {
	height: 50px;
	width: 50px;
	margin: 0 5px;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer ที่ใช้คลาสที่ชื่อว่า social-item และแท็ค img  แปลงภาพระดับสีเทาอยู่ในระดับ1  */
#footer .social-item img {
	filter: grayscale(1);
	transition: .3s ease filter;
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer ที่ใช้คลาสที่ชื่อว่า social-item และแสดงในภายหลัง และแท็ค img  แปลงภาพระดับสีเทาอยู่ในระดับ0  */
#footer .social-item:hover img {
	filter: grayscale(0);
}

/*กำหนดให้ element ที่ใช้ id ที่ชื่อว่า footer และ element ที่อยู่ภายใต้ แท็ค p  กำหนดให้มีสีขาวและมีขนาดของ ตัวอักษรขนาด 1.3 rem */
#footer p {
	color: white;
	font-size: 1.3rem;
}



/* Media Query สำหรับ ขนาดของ Desktop ที่มีขนาดของหน้าจอที่น้อยกว่า 786px */
@media only screen and (max-width: 768px) {
  header nav {
    display: none;
  }
 /*กำหนดให้ element ใน ID hamburger-icon มีการแสดงผลแบบ block*/
  #hamburger-icon {
    display: block;
  }
  /* กำหนดให้ element ที่มี  id ที่ชื่อว่าeducations และคลาสที่มีชื่อว่า education-bottom และคลาสที่มีชื่อว่า education-item กำหนดขนาดของตัวอักษร 45 %  */
  #educations .education-bottom .education-item {
  flex-basis: 45%;
  margin: 2.5%;
  }

  /*กำหนดให้ แท็ค h1 ที่ใช้class ที่ชื่อว่า section-title โโยกำหนดให้ตัวอักษรมีขนาด 6 rem และแสดงผลอยู่ กึ่งกลาง*/
	h1.section-title {
		font-size: 1.5rem;
		text-align: center;
	}
	
	/* กำหนดให้ element ที่มี  id ที่ชื่อว่า hero และ แท็ค h1 กำหนดให้ตัวอักษรให้มีขนาด 7 rem */
	#hero h1 {
		font-size: 2rem;
	}
}



/* Media Query สำหรับ ขนาดของ Desktop ที่มีขนาดของหน้าจอที่น้อยกว่า 1200px */
@media only screen and (min-width: 1200px) {
  /*กำหนดให้ element ที่มี  id ที่ชื่อว่า educations และคลาสที่ชื่อว่า education-bottom และคลาสที่ชื่อว่า education-item กำหนดให้ความสูงไม่เกิน 20 % และความกว้างระหว่าง element 1.5 % */
	#educations .education-bottom .education-item {
		flex-basis: 20%;
		margin: 1.5%;
	}


}